MomentumOptimizer = {}

MomentumOptimizer.__index = MomentumOptimizer

local AqwamMatrixLibrary = require(script.Parent.Parent.AqwamRobloxMatrixLibraryLinker.Value)

local defaultDecayRate = 0.1

function MomentumOptimizer.new(DecayRate)
	
	local NewMomentumOptimizer = {}
	
	setmetatable(NewMomentumOptimizer, MomentumOptimizer)
	
	NewMomentumOptimizer.DecayRate = DecayRate or defaultDecayRate
	
	NewMomentumOptimizer.PreviousDeltaMatrix = nil
	
	return NewMomentumOptimizer
	
end

function MomentumOptimizer:setDecayRate(DecayRate)
	
	self.DecayRate = DecayRate
	
end

function MomentumOptimizer:calculate(learningRate, ModelParametersDerivatives)
	
	if (self.PreviousDeltaMatrix == nil) then
		
		self.PreviousDeltaMatrix = AqwamMatrixLibrary:createMatrix(#ModelParametersDerivatives, #ModelParametersDerivatives[1])
		
	end
	
	local MomentumMatrixPart1 = AqwamMatrixLibrary:multiply(learningRate, ModelParametersDerivatives)
	
	local MomentumMatrixPart2 = AqwamMatrixLibrary:multiply(self.DecayRate, self.PreviousDeltaMatrix)
	
	local DeltaMatrix = AqwamMatrixLibrary:add(MomentumMatrixPart1, MomentumMatrixPart2)
	
	return DeltaMatrix
	
end

return MomentumOptimizer

